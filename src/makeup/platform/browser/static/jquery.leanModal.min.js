function sortList(json_list){
    json_list = json_list.sort(function(a,b){
 	    if(a['Date'] == b['Date'])
 	      return (a['Title'] > b['Title']);
       else
         return (a['Date'] > b['Date']);
    })
}

function generate_uid(){
    var mua = $('#mua-name').text();
    return mua.substring(15,mua.length).replace(/ /g,"_");
}

document.addEventListener("DOMContentLoaded", function(event) {

  var my_local_storage = generate_uid();

  var isClient = $('#isClient').val();
//  var isAdmin = $('#isAdminMuaPage').val();
//
//  if(isAdmin == 'False') $('div#edit-bar').hide();

  if(isClient == "False"){
    $('.UserRating').hide();
  }

  var mua_page_name = $('#mua-name').text();
  var logged_in_mua = $('#isMua').val();

  if(mua_page_name.substring(mua_page_name.lastIndexOf(':')+2,mua_page_name.length) != logged_in_mua)
    {$('.portlet.QuickUploadPortlet').parent().hide(); $('#edit-mua').hide();}

  // Validates that the input string is a valid date formatted as "yyyy-mm-dd"  mm/dd/yyy
  function validate_inputs(dateString, hour)
  {
    // First check for the pattern
    if(!/^\d{4}\-\d{1,2}\-\d{1,2}$/.test(dateString)){
      alert("Invalid date!");
      return false;
    }

    if(hour=='23' || hour=="24"){
      alert("This hour is not appropiate for an appointment! Please choose an earlier hour.");
      return false;
    }

    // Parse the date parts to integers
    var parts = dateString.split("-");
    var day = parseInt(parts[2], 10);
    var month = parseInt(parts[1], 10);
    var year = parseInt(parts[0], 10);

    // Check the ranges of month and year
    if(month <= 0 || month > 12){
      alert("Invalid date!");
      return false;
    }

    var monthLength = [ 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 ];

    // Adjust for leap years
    if(year % 400 == 0 || (year % 100 != 0 && year % 4 == 0))
        monthLength[1] = 29;

    // Check the range of the day
    if (day > 0 && day <= monthLength[month - 1] == false){
      alert("Invalid date!");
      return false;
    }

    var inputDate = new Date(dateString);
    var todaysDate = new Date();

    if(inputDate.setHours(0,0,0,0) < todaysDate.setHours(0,0,0,0)) {
      alert("The date you submitted has passed!");
      return false;
    }

    if(!/^([1-9]|1[0-9]|2[0-4])$/.test(hour)){
    alert("Invalid hour!");
    return false;}

    var current_hour = new Date().getHours();
    var toInt_date = parseInt(hour)

    if(inputDate.setHours(0,0,0,0) == todaysDate.setHours(0,0,0,0) && toInt_date <= current_hour) {
      alert("The hour you submitted has passed!");
      return false;
    }

    return true;
  };

  function isBooked(date, hour){

    var all_events = localStorage.getItem(my_local_storage);

    var data = JSON.parse(all_events);

    for(var i in data.events){
      var mua_date = data.events[i]["Date"].slice(0,10).replace(/-/g,"");
      var mua_hour = data.events[i]["Title"].substring(0,5);

      changed_date = date.replace(/-/g,'');
      last_two = changed_date.substring(6,8);

      if(last_two[0]=='0')
        last_two = '0'+(last_two[1]-1).toString();
      else last_two = (last_two-1).toString();

      changed_date = changed_date.slice(0, -2);
      changed_date += last_two;

      if(mua_date == changed_date){

        if(parseInt(hour)<10)
          hour='0' + hour + ':00';
        else hour+=':00';

        if(parseInt(hour) == parseInt(mua_hour.substring(0,2))+1)
          return true;

        if(parseInt(hour) == parseInt(mua_hour.substring(0,2))-1)
          return true;

        if(hour==mua_hour)
          return true;
      }
    }
    return false;
  };

  function bookArtist(date, hour){

  if(parseInt(hour)<8)
    var res_hour='0' + hour + ':00-0' + (parseInt(hour)+2).toString() + ':00';
  else if(parseInt(hour)==8)
    var res_hour='08:00-10:00';
  else
    var res_hour = hour + ':00-' + (parseInt(hour)+2).toString()+':00';

  var year = parseInt(date.substring(0,4));
  var month = parseInt(date.substring(5,7));
  var day = parseInt(date.substring(8,10));
  var client = $('#clientName').val();
  var go_to_client = $('#clienturl').val();

  book_event = {'Date': new Date(year, month-1, day), 'Title': res_hour+' - ' + client + ',' + go_to_client};

  var all_events = localStorage.getItem(my_local_storage);
  var data = JSON.parse(all_events);

  data.events.push(book_event);
  sortList(data.events);
  all_events = JSON.stringify(data);

  localStorage.setItem(my_local_storage, all_events);

  var settings = {};
  var element = document.getElementById('caleandar');
  element.innerHTML='';

  sortList(data.events);
  caleandar(element, data.events, settings);
  $.post('post_handler.py');
  };

  $('#reservation-btn').unbind('click').click(function() {

  date = $('#res-date').val();
  hour = $('#res-hour').val();

  if(validate_inputs(date, hour)){

    if(isBooked(date, hour)){
      alert("The artist is busy at that time! Please choose another date or hour!");
      return false;
    }
    else { bookArtist(date, hour); alert("You have a reservation on " + date + " , at "+ hour + ":00");}
  }
  return false;
  });

  $('.pop-up').hide();

  $( "#popup-modal" ).click(function() {

    $("body").css("overflow",'hidden');

    $('#overlay').removeClass('blur-out');
    $('#overlay').addClass('blur-in');

    $('.portletWrapper').removeClass('blur-out');
    $('.portletWrapper').addClass('blur-in');

    $('.RatingViewlet').removeClass('blur-out');
    $('.RatingViewlet').addClass('blur-in');

  $('.pop-up').fadeIn(1000);

      $('.close-button').click(function (e) {

      $("body").css("overflow",'auto');

      $('.pop-up').fadeOut(700);
      $('#overlay').removeClass('blur-in');
      $('#overlay').addClass('blur-out');

      $('.RatingViewlet').removeClass('blur-in');
      $('.RatingViewlet').addClass('blur-out');
      e.stopPropagation();

    });
});
});
